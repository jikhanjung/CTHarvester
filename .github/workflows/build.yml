name: Build

permissions:
  contents: write  # Release 생성을 위해 필요

on:
  push:
    branches: [ "main" ]  # main 브랜치 푸시 시 실행
  workflow_dispatch:  # 수동 실행 가능

jobs:
  build-windows:
    runs-on: windows-latest
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
    
    - name: Set up Python
      uses: actions/setup-python@v4
      with:
        python-version: '3.12'
    
    - name: Install Windows dependencies
      run: |
        python -m pip install --upgrade pip
        pip install -r requirements.txt
        pip install pyinstaller
    
    - name: Download and Install Inno Setup
      shell: pwsh
      run: |
        $inno_url = "https://files.jrsoftware.org/is/6/innosetup-6.2.2.exe"
        $inno_installer = "innosetup-installer.exe"
        Invoke-WebRequest -Uri $inno_url -OutFile $inno_installer
        Start-Process -FilePath $inno_installer -ArgumentList "/VERYSILENT /SUPPRESSMSGBOXES /NORESTART" -Wait
    
    - name: Build Windows executable and installer
      run: |
        python build.py
      env:
        BUILD_NUMBER: ${{ github.run_number }}
    
    - name: Upload Windows artifact
      uses: actions/upload-artifact@v4
      with:
        name: ctharvester-windows
        path: |
          dist/
          InnoSetup/Output/CTHarvester_v*_build*_Installer.exe
    
  build-macos:
    runs-on: macos-latest
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
    
    - name: Set up Python
      uses: actions/setup-python@v4
      with:
        python-version: '3.12'
    
    - name: Install macOS system dependencies
      run: |
        brew install qt5
        # Set Qt5 environment variables
        echo "export PATH=/usr/local/opt/qt5/bin:$PATH" >> ~/.bash_profile
        echo "export LDFLAGS=-L/usr/local/opt/qt5/lib" >> ~/.bash_profile
        echo "export CPPFLAGS=-I/usr/local/opt/qt5/include" >> ~/.bash_profile
    
    - name: Install Python dependencies
      run: |
        python -m pip install --upgrade pip
        pip install -r requirements.txt
        pip install pyinstaller
    
    - name: Build macOS application
      run: |
        # Set Qt5 paths for PyInstaller
        export PATH=/usr/local/opt/qt5/bin:$PATH
        python build.py
      env:
        BUILD_NUMBER: ${{ github.run_number }}
    
    - name: Create macOS app bundle
      run: |
        # If build creates an app bundle, we're good
        # Otherwise, create a simple .app structure
        if [ ! -d "dist/CTHarvester.app" ]; then
          mkdir -p "dist/CTHarvester.app/Contents/MacOS"
          cp -r dist/* "dist/CTHarvester.app/Contents/MacOS/" 2>/dev/null || true
        fi
    
    - name: Upload macOS artifact  
      uses: actions/upload-artifact@v4
      with:
        name: ctharvester-macos
        path: dist/
  
  build-linux:
    runs-on: ubuntu-latest
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
    
    - name: Set up Python
      uses: actions/setup-python@v4
      with:
        python-version: '3.12'
    
    - name: Install Linux system dependencies
      run: |
        sudo apt-get update
        sudo apt-get install -y \
          libxcb-xinerama0 \
          libxcb-icccm4 \
          libxcb-image0 \
          libxcb-keysyms1 \
          libxcb-randr0 \
          libxcb-render-util0 \
          libxcb-xfixes0 \
          libxcb-shape0 \
          libxcb-cursor0 \
          qt5-qmake \
          qtbase5-dev \
          libqt5gui5 \
          libqt5core5a \
          libqt5widgets5 \
          libglut-dev \
          libglut3.12 \
          python3-opengl \
          fuse
    
    - name: Install Python dependencies
      run: |
        python -m pip install --upgrade pip
        pip install -r requirements.txt
        pip install pyinstaller
    
    - name: Build Linux executable
      run: |
        python build.py
      env:
        BUILD_NUMBER: ${{ github.run_number }}
    
    - name: Upload Linux artifact
      uses: actions/upload-artifact@v4
      with:
        name: ctharvester-linux
        path: |
          dist/